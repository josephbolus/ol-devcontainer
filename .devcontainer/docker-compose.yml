version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ..:/workspace:cached
    command: sleep infinity
    networks:
      - mysql-network
    depends_on:
      - mysql-primary
      - mysql-replica

  mysql-primary:
    build:
      context: ./mysql
      dockerfile: Dockerfile.mysql
      args:
        MYSQL_VERSION: ${MYSQL_VERSION}
        MYSQL_PACKAGE_RELEASE: ${MYSQL_PACKAGE_RELEASE}
    container_name: mysql-primary
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: mysqluser
      MYSQL_PASSWORD: mysqlpassword
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: testdb      
      MYSQL_SERVER_ID: 1  # Fallback
    volumes:
      - mysql-primary-data:/data/mysql
      - ./conf/primary.cnf:/etc/my.cnf
      - ./mysql/init-scripts/primary-init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./ssh:/opt/devcontainer/ssh:ro
    ports:
      - "3306:3306"
    networks:
      - mysql-network

  mysql-replica:
    build:
      context: ./mysql
      dockerfile: Dockerfile.mysql
      args:
        MYSQL_VERSION: ${MYSQL_VERSION}
        MYSQL_PACKAGE_RELEASE: ${MYSQL_PACKAGE_RELEASE}
    container_name: mysql-replica
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: mysqluser
      MYSQL_PASSWORD: mysqlpassword      
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: testdb         
      MYSQL_SERVER_ID: 2  # Fallback
    volumes:
      - mysql-replica-data:/data/mysql
      - ./conf/replica.cnf:/etc/my.cnf
      - ./mysql/init-scripts/replica-init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./ssh:/opt/devcontainer/ssh:ro
    ports:
      - "3307:3306"
    networks:
      - mysql-network
    depends_on:
      - mysql-primary

networks:
  mysql-network:
    driver: bridge

volumes:
  mysql-primary-data:
  mysql-replica-data:
